/*
 * Copyright 2017 Andrew Reitz
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

ext {
  minSdkVersion = 9
  compileSdkVersion = 25
  buildToolsVersion = '25.0.2'
  supportLibVersion = '25.3.1'
  spockVersion = '1.1-groovy-2.4-rc-4'
  byteBuddyVersion = '1.6.13'
  rxJavaVersion = '1.2.9'
  cglibVersion = '3.2.5'
}

buildscript {
  repositories {
    jcenter()
    maven { url 'https://maven.google.com' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.3.2'
    classpath 'org.codehaus.groovy:groovy-android-gradle-plugin:1.2.0'
    classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    classpath 'org.jfrog.buildinfo:build-info-extractor-gradle:3.2.0'
    classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:3.1.0'
    classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
  }
}

allprojects {
  group = 'com.andrewreitz.velcro'
  version = '2.0.0-SNAPSHOT'

  apply plugin: 'com.github.ben-manes.versions'

  dependencyUpdates.resolutionStrategy = {
    componentSelection { rules ->
      rules.all { ComponentSelection selection ->
        boolean rejected = ['alpha', 'beta', 'rc', 'preview', 'cr', 'm'].any { qualifier ->
          selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-]*/
        }
        if (rejected) {
          selection.reject('Release candidate')
        }
      }
    }
  }
}

subprojects {
  repositories {
    jcenter()
  }
}

ext {
  isSnapshot = version.endsWith('SNAPSHOT')
  isTravis = System.getenv('TRAVIS') != null
}
